{
  "name": "ScrollView",
  "props": {
    "scrollX": {
      "description": "Horizontal scrolling is allowed",
      "description_zh": "允许横向滚动",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "scrollY": {
      "description": "Portrait scrolling is allowed",
      "description_zh": "允许纵向滚动",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "upperThreshold": {
      "description": "How far from the top/left (in px), the scrolltoupper event is triggered",
      "description_zh": "距顶部/左边多远时（单位px），触发 scrolltoupper 事件",
      "default": "50",
      "value": "",
      "type": "number",
      "required": false
    },
    "lowerThreshold": {
      "description": "How far from the bottom/right (in px) the scrolltolower event is triggered",
      "description_zh": "距底部/右边多远时（单位px），触发 scrolltolower 事件",
      "default": "50",
      "value": "",
      "type": "number",
      "required": false
    },
    "scrollTop": {
      "description": "Sets the vertical scrollbar position",
      "description_zh": "设置竖向滚动条位置",
      "default": "",
      "value": "",
      "type": "number",
      "required": false
    },
    "scrollLeft": {
      "description": "Sets the horizontal scrollbar position",
      "description_zh": "设置横向滚动条位置",
      "default": "",
      "value": "",
      "type": "number",
      "required": false
    },
    "scrollIntoView": {
      "description": "The value should be the ID of a child element (the ID cannot start with a number). Sets which direction is scrollable to scroll to the element in which direction",
      "description_zh": "值应为某子元素id（id不能以数字开头）。设置哪个方向可滚动，则在哪个方向滚动到该元素",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "scrollWithAnimation": {
      "description": "Use animated transitions when setting the scrollbar position",
      "description_zh": "在设置滚动条位置时使用动画过渡",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "enableBackToTop": {
      "description": "When iOS clicks the top status bar and Android double-clicks the title bar, the scroll bar returns to the top, and only vertically oriented is supported",
      "description_zh": "iOS 点击顶部状态栏、安卓双击标题栏时，滚动条返回顶部，只支持竖向",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "enableFlex": {
      "description": "Enable the flexbox layout. When enabled, the current node declares display: flex and becomes a flex container and acts on its child node.",
      "description_zh": "启用 flexbox 布局。开启后，当前节点声明了 display: flex 就会成为 flex container，并作用于其孩子节点。",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "scrollAnchoring": {
      "description": "Enable the scroll anchoring feature, that is, control the scroll position not to jitter with the change of content, which only takes effect under iOS, and can refer to the CSS overflow-anchor property under Android.",
      "description_zh": "开启 scroll anchoring 特性，即控制滚动位置不随内容变化而抖动，仅在 iOS 下生效，安卓下可参考 CSS overflow-anchor 属性。",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "refresherEnabled": {
      "description": "Enable custom drop-down refresh",
      "description_zh": "开启自定义下拉刷新",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "refresherThreshold": {
      "description": "Set a custom drop-down refresh threshold",
      "description_zh": "设置自定义下拉刷新阈值",
      "default": "45",
      "value": "",
      "type": "number",
      "required": false
    },
    "refresherDefaultStyle": {
      "description": "Set a custom drop-down to refresh the default style, and support setting black or white or none, none means that the default style is not used",
      "description_zh": "设置自定义下拉刷新默认样式，支持设置 black or white or none， none 表示不使用默认样式",
      "default": "black",
      "value": "",
      "type": "string",
      "required": false
    },
    "refresherBackground": {
      "description": "Set a custom drop-down refresh area background color",
      "description_zh": "设置自定义下拉刷新区域背景颜色",
      "default": "#FFF",
      "value": "",
      "type": "string",
      "required": false
    },
    "refresherTriggered": {
      "description": "Set the current pull-down refresh state, true indicates that the pull-down refresh has been triggered, and false indicates that the pull-down refresh has not been triggered",
      "description_zh": "设置当前下拉刷新状态，true 表示下拉刷新已经被触发，false 表示下拉刷新未被触发",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "enhanced": {
      "description": "启用 scroll-view 增强特性",
      "description_zh": "启用 scroll-view 增强特性",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "bounces": {
      "description": "scroll-view boundary elasticity control under iOS (effective when enhanced attribute is enabled at the same time)",
      "description_zh": "iOS 下 scroll-view 边界弹性控制 (同时开启 enhanced 属性后生效)",
      "default": "true",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "showScrollbar": {
      "description": "Scrollbar Implicit Control (Takes effect when enhanced attribute is also enabled)",
      "description_zh": "滚动条显隐控制 (同时开启 enhanced 属性后生效)",
      "default": "true",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "pagingEnabled": {
      "description": "Pagination slide effect (effective when enhanced attribute is also enabled)",
      "description_zh": "分页滑动效果 (同时开启 enhanced 属性后生效)",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "fastDeceleration": {
      "description": "boolean\tfalse\t滑动减速速率控制 (同时开启 enhanced 属性后生效)",
      "description_zh": "boolean\tfalse\t滑动减速速率控制 (同时开启 enhanced 属性后生效)",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "scrollAnimationDuration": {
      "description": "When scroll-with-animation is set to true, you can set scroll-animation-duration to control the execution time of the animation, in ms.",
      "description_zh": "当 scroll-with-animation设置为 true 时，可以设置 scroll-animation-duration 来控制动画的执行时间，单位 ms。",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "trapScroll": {
      "description": "When scrolling vertically, when scrolling to the top or bottom, the page scrolling is forcibly disabled, and only the scroll-view itself is still triggered.",
      "description_zh": "纵向滚动时，当滚动到顶部或底部时，强制禁止触发页面滚动，仍然只触发 scroll-view 自身的滚动。",
      "default": "false",
      "value": "",
      "type": "string",
      "required": false
    },
    "disableLowerScroll": {
      "description": "Before scrolling occurs, determine the scrolling direction, if the direction is top/left, if the value is 'always', it will always disable scrolling, if the value is 'out-of-bounds, and it is currently scrolled to the top/left, scrolling will be disabled.",
      "description_zh": "发生滚动前，对滚动方向进行判断，当方向是顶部/左边时，如果值为`always`将始终禁止滚动，如果值为`out-of-bounds 且当前已经滚动到顶部/左边，禁止滚动。",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "disableUpperScroll": {
      "description": "When the direction is bottom/right, if the value is 'always', it will always prohibit scrolling, and if the value is 'out-of-bounds, it will be disabled if it is currently scrolling to the bottom/right.",
      "description_zh": "发生滚动前，对滚动方向进行判断，当方向是底部/右边时，如果值为`always`将始终禁止滚动，如果值为`out-of-bounds 且当前已经滚动到底部/右边，禁止滚动。",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "ariaLabel": {
      "description": "Accessibility, additional description of (attribute) elements",
      "description_zh": "无障碍访问，（属性）元素的额外描述",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "enablePassive": {
      "description": "Enabling the passive feature can improve some scrolling performance",
      "description_zh": "开启 passive 特性，能优化一定的滚动性能",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "type": {
      "description": "Render mode list - list mode. Only on-screen nodes will be rendered, and will be rendered on demand according to whether the direct child node is on the screen, if there is only one direct child node, the performance will be degraded in the custom - custom mode. Only on-screen nodes will be rendered, and child nodes can be sticky-section, list-view, grid-view, and other components",
      "description_zh": "渲染模式list - 列表模式。只会渲染在屏节点，会根据直接子节点是否在屏来按需渲染，若只有一个直接子节点则性能会退化custom - 自定义模式。只会渲染在屏节点，子节点可以是 sticky-section list-view grid-view 等组件",
      "default": "list",
      "value": "",
      "type": "list / custom",
      "required": false
    },
    "reverse": {
      "description": "Whether or not to scroll in reverse. Generally, the initial scroll position is at the top, and the reverse scroll is at the bottom.",
      "description_zh": "是否反向滚动。一般初始滚动位置是在顶部，反向滚动则是在底部。",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "clip": {
      "description": "Whether to crop overflow is enabled by default",
      "description_zh": "是否对溢出进行裁剪，默认开启",
      "default": "true",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "cacheExtent": {
      "description": "Specifies the distance of the rendered area outside the viewport, and nodes outside the viewport are not rendered by default. Specifying cache-extent optimizes the scrolling experience and loading speed, but increases memory usage and affects above-the-fold speed, which can be enabled as needed.",
      "description_zh": "指定视口外渲染区域的距离，默认情况下视口外节点不渲染。指定 cache-extent 可优化滚动体验和加载速度，但会提高内存占用且影响首屏速度，可按需启用。",
      "default": "",
      "value": "",
      "type": "number",
      "required": false
    },
    "minDragDistance": {
      "description": "Specifies the minimum drag distance at which scroll-view triggers scrolling. It is only used when scroll-view and other components have gesture conflicts, and can be adjusted to make scrolling more responsive.",
      "description_zh": "指定 scroll-view 触发滚动的最小拖动距离。仅在 scroll-view 和其他组件存在手势冲突时使用，可通过调整该属性使得滚动更加灵敏。",
      "default": "18",
      "value": "",
      "type": "number",
      "required": false
    },
    "padding": {
      "description": "Arrays of length 4, specifying the padding in the order of top, right, bottom, left",
      "description_zh": "长度为 4 的数组，按 top、right、bottom、left 顺序指定内边距",
      "default": "[0,0,0,0]",
      "value": "",
      "type": "[number, number, number, number]",
      "required": false
    },
    "scrollIntoViewWithinExtent": {
      "description": "Only scroll-into-view to the target node within the cacheExtent is better for performance",
      "description_zh": "只 scroll-into-view 到 cacheExtent 以内的目标节点，性能更佳",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "scrollIntoViewAlignment": {
      "description": "Specifies the position of the scroll-into-view target node within the viewport. start - the target node is displayed at the beginning of the viewportcenter - the target node is displayed in the middle of the viewportend-- the target node is displayed at the end of the viewport nearest—the target node is displayed at the edge of the nearest viewport, and does not trigger scrolling if the node is already in the viewport",
      "description_zh": "指定 scroll-into-view 目标节点在视口内的位置。start - 目标节点显示在视口开始处center - 目标节点显示在视口中间end - 目标节点显示在视口结束处nearest - 目标节点在就近的视口边缘显示，若节点已在视口内则不触发滚动",
      "default": "start",
      "value": "",
      "type": "start / center / end / nearest",
      "required": false
    },
    "refresherTwoLevelEnabled": {
      "description": "Enable the second-level pulldown ability",
      "description_zh": "开启下拉二级能力",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "refresherTwoLevelTriggered": {
      "description": "Set the toggle on/off level",
      "description_zh": "设置打开/关闭二级",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "refresherTwoLevelThreshold": {
      "description": "Drop down the second-level threshold",
      "description_zh": "下拉二级阈值",
      "default": "150",
      "value": "",
      "type": "number",
      "required": false
    },
    "refresherTwoLevelCloseThreshold": {
      "description": "The threshold for sliding back to turn off the secondary level",
      "description_zh": "滑动返回时关闭二级的阈值",
      "default": "80",
      "value": "",
      "type": "number",
      "required": false
    },
    "refresherTwoLevelScrollEnabled": {
      "description": "Whether it can be slid when in the secondary state",
      "description_zh": "处于二级状态时是否可滑动",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "refresherBallisticRefreshEnabled": {
      "description": "Whether inertial scrolling triggers a pull-down refresh",
      "description_zh": "惯性滚动是否触发下拉刷新",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "refresherTwoLevelPinned": {
      "description": "When the second level is about to be opened, it is denied",
      "description_zh": "即将打开二级时否定住",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "onScrollToUpper": {
      "description": "Scrolling to the top/left triggers the scrolltoupper event",
      "description_zh": "滚动到顶部/左边，会触发 scrolltoupper 事件",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onScrollToLower": {
      "description": "Scrolling to the bottom/right triggers the scrolltolower event",
      "description_zh": "滚动到底部/右边，会触发 scrolltolower 事件",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onScroll": {
      "description": "Triggered while scrolling",
      "description_zh": "滚动时触发",
      "default": "",
      "value": "",
      "type": "BaseEventOrigFunction<onScrollDetail>",
      "required": false
    },
    "onScrollStart": {
      "description": "Scroll to start the event",
      "description_zh": "滚动开始事件",
      "default": "",
      "value": "",
      "type": "BaseEventOrigFunction<onScrollDetail>",
      "required": false
    },
    "onScrollEnd": {
      "description": "Scroll over event",
      "description_zh": "滚动结束事件",
      "default": "",
      "value": "",
      "type": "BaseEventOrigFunction<onScrollDetail>",
      "required": false
    },
    "onRefresherPulling": {
      "description": "Custom drop-down refresh controls are pulled down",
      "description_zh": "自定义下拉刷新控件被下拉",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onRefresherRefresh": {
      "description": "A custom drop-down refresh is triggered",
      "description_zh": "自定义下拉刷新被触发",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onRefresherRestore": {
      "description": "Custom drop-down refresh is reset",
      "description_zh": "自定义下拉刷新被复位",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onRefresherAbort": {
      "description": "Custom drop-down refresh is aborted",
      "description_zh": "自定义下拉刷新被中止",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onRefresherWillRefresh": {
      "description": "A custom pull-down refresh is about to trigger an event that triggers a refresh (when the drag exceeds the refresher-threshold).",
      "description_zh": "自定义下拉刷新即将触发刷新（拖动超过 refresher-threshold 时）的事件",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onRefresherStatusChange": {
      "description": "Pull down to refresh the status callback",
      "description_zh": "下拉刷新状态回调",
      "default": "",
      "value": "",
      "type": "CommonEventFunction<RefresherStatusChange>",
      "required": false
    },
    "onDragStart": {
      "description": "Swipe to start event (effective when enhanced attribute is also enabled)",
      "description_zh": "滑动开始事件 (同时开启 enhanced 属性后生效)",
      "default": "",
      "value": "",
      "type": "CommonEventFunction<onDragDetail>",
      "required": false
    },
    "onDragging": {
      "description": "Sliding event (takes effect when enhanced property is also enabled)",
      "description_zh": "滑动事件 (同时开启 enhanced 属性后生效)",
      "default": "",
      "value": "",
      "type": "CommonEventFunction<onDragDetail>",
      "required": false
    },
    "onDragEnd": {
      "description": "Sliding End Event (Takes effect when enhanced property is also enabled)",
      "description_zh": "滑动结束事件 (同时开启 enhanced 属性后生效)",
      "default": "",
      "value": "",
      "type": "CommonEventFunction<onDragDetail>",
      "required": false
    },
    "onTouchStart": {
      "description": "The touch action begins.",
      "description_zh": "触摸动作开始。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchMove": {
      "description": "Move after touching.",
      "description_zh": "触摸后移动。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchEnd": {
      "description": "The touch action ends.",
      "description_zh": "触摸动作结束。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchCancel": {
      "description": "Touch actions are interrupted, such as call reminders, pop-ups.",
      "description_zh": "触摸动作被打断，如来电提醒、弹窗。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    }
  },
  "link": "https://docs.taro.zone/docs/components/viewContainer/scroll-view",
  "link_zh": "https://docs.taro.zone/docs/components/viewContainer/scroll-view",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": []
}
