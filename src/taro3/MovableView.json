{
  "name": "MovableView",
  "props": {
    "direction": {
      "description": "movable-view 的移动方向,属性值有all、vertical、horizontal、None",
      "description_zh": "movable-view 的移动方向，属性值有all、vertical、horizontal、none",
      "default": "none",
      "value": "",
      "type": "all / vertical / horizontal / none",
      "required": false
    },
    "inertia": {
      "description": "movable-view or not with inertia",
      "description_zh": "movable-view 是否带有惯性",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "outOfBounds": {
      "description": "Whether the movable-view can still be moved after the movable area is exceeded",
      "description_zh": "超过可移动区域后，movable-view 是否还可以移动",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "x": {
      "description": "Defines an offset in the direction of the x-axis, which automatically moves to the movable range if the value of x is not within the movable range, and changes the value of the x to trigger an animation",
      "description_zh": "定义 x 轴方向的偏移，如果 x 的值不在可移动范围内，会自动移动到可移动范围；改变 x 的值会触发动画",
      "default": "",
      "value": "",
      "type": "string or number",
      "required": false
    },
    "y": {
      "description": "Defines an offset in the direction of the y-axis, which automatically moves to the movable range if the value of y is not within the movable range, and changes the value of y to trigger an animation",
      "description_zh": "定义 y 轴方向的偏移，如果 y 的值不在可移动范围内，会自动移动到可移动范围；改变 y 的值会触发动画",
      "default": "",
      "value": "",
      "type": "string or number",
      "required": false
    },
    "damping": {
      "description": "The damping coefficient is used to control the animation when x or y changes and the animation of the rebound across bounds, the higher the value, the faster it moves",
      "description_zh": "阻尼系数，用于控制x或y改变时的动画和过界回弹的动画，值越大移动越快",
      "default": "20",
      "value": "",
      "type": "number",
      "required": false
    },
    "friction": {
      "description": "Coefficient of friction, which controls the animation of inertial slip, the higher the value, the greater the friction, the faster the slide stops, must be greater than 0, otherwise it will be set to the default value",
      "description_zh": "摩擦系数，用于控制惯性滑动的动画，值越大摩擦力越大，滑动越快停止；必须大于 0，否则会被设置成默认值",
      "default": "2",
      "value": "",
      "type": "number",
      "required": false
    },
    "disabled": {
      "description": "Whether to disable or not",
      "description_zh": "是否禁用",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "scale": {
      "description": "Whether to support two-finger zoom, the default zoom gesture takes effect in the movable-view",
      "description_zh": "是否支持双指缩放，默认缩放手势生效区域是在 movable-view 内",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "scaleMin": {
      "description": "Define the minimum zoom multiplier",
      "description_zh": "定义缩放倍数最小值",
      "default": "0.5",
      "value": "",
      "type": "number",
      "required": false
    },
    "scaleMax": {
      "description": "Define the maximum zoom multiplier",
      "description_zh": "定义缩放倍数最大值",
      "default": "10",
      "value": "",
      "type": "number",
      "required": false
    },
    "scaleValue": {
      "description": "Define the zoom multiplier, which can range from 0.5 to 10",
      "description_zh": "定义缩放倍数，取值范围为 0.5 - 10",
      "default": "1",
      "value": "",
      "type": "number",
      "required": false
    },
    "animation": {
      "description": "Whether or not to use animations",
      "description_zh": "是否使用动画",
      "default": "true",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "onChange": {
      "description": "An event that is triggered during dragging",
      "description_zh": "拖动过程中触发的事件",
      "default": "",
      "value": "",
      "type": "CommonEventFunction<onChangeEventDetail>",
      "required": false
    },
    "onChangeEnd": {
      "description": "The event triggered by the end of dragging",
      "description_zh": "拖动结束触发的事件",
      "default": "",
      "value": "",
      "type": "CommonEventFunction<onChangeEventDetail>",
      "required": false
    },
    "onDragStart": {
      "description": "Triggered when you start dragging",
      "description_zh": "开始拖动时触发",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onDragEnd": {
      "description": "Triggered at the end of dragging",
      "description_zh": "拖动结束时触发",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onScale": {
      "description": "An event that is triggered during the scaling process",
      "description_zh": "缩放过程中触发的事件",
      "default": "",
      "value": "",
      "type": "CommonEventFunction<onScaleEventDetail>",
      "required": false
    },
    "onTouchStart": {
      "description": "When the touch action begins, the event is passed to the parent node.",
      "description_zh": "触摸动作开始，事件会向父节点传递。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchMove": {
      "description": "When the touch action starts, the event only acts on the component and is not passed to the parent node.",
      "description_zh": "触摸动作开始，事件仅作用于组件，不向父节点传递。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchEnd": {
      "description": "The finger touch action ends",
      "description_zh": "手指触摸动作结束",
      "default": "",
      "value": "",
      "type": "TouchEventFunction",
      "required": false
    },
    "onTouchCancel": {
      "description": "Touch actions are interrupted, such as call reminders, pop-ups.",
      "description_zh": "触摸动作被打断，如来电提醒、弹窗。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onHTouchMove": {
      "description": "The movement after the first finger touch is a lateral movement, and if this event is caught, it means that the touchmove event is also caught",
      "description_zh": "初次手指触摸后移动为横向的移动，如果 catch 此事件，则意味着 touchmove 事件也被 catch",
      "default": "",
      "value": "",
      "type": "TouchEventFunction",
      "required": false
    },
    "onVTouchMove": {
      "description": "The movement after the first finger touch is a vertical movement, and if this event is caught, it means that the touchmove event is also caught",
      "description_zh": "初次手指触摸后移动为纵向的移动，如果 catch 此事件，则意味着 touchmove 事件也被 catch",
      "default": "",
      "value": "",
      "type": "TouchEventFunction",
      "required": false
    },
    "catchTouchStart": {
      "description": "Touch move events, which only act on components and are not passed to the parent node.",
      "description_zh": "触摸移动事件，事件仅作用于组件，不向父节点传递。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "catchTouchMove": {
      "description": "Touch move events, which only act on components and are not passed to the parent node.",
      "description_zh": "触摸移动事件，事件仅作用于组件，不向父节点传递。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "catchTouchEnd": {
      "description": "When the touch action ends, the event only acts on the component and is not passed to the parent node.",
      "description_zh": "触摸动作结束，事件仅作用于组件，不向父节点传递。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    }
  },
  "link": "https://docs.taro.zone/docs/components/viewContainer/movable-view",
  "link_zh": "https://docs.taro.zone/docs/components/viewContainer/movable-view",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": []
}
