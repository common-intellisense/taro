{
  "name": "View",
  "props": {
    "hoverClass": {
      "description": "Specifies the style class to press. When hover-class=\"none\", there is no click-through effect",
      "description_zh": "指定按下去的样式类。当 hover-class=\"none\" 时，没有点击态效果",
      "default": "none",
      "value": "",
      "type": "string",
      "required": false
    },
    "hoverStyle": {
      "description": "Since the RN does not support hoverClass, the View component on the RN side implements the hoverStyle property, which is written in a similar way to style, except that the style of hoverStyle is specified to be pressed.",
      "description_zh": "由于 RN 不支持 hoverClass，故 RN 端的 View 组件实现了 hoverStyle属性，写法和 style 类似，只不过 hoverStyle 的样式是指定按下去的样式。",
      "default": "none",
      "value": "",
      "type": "StyleProp<ViewStyle>",
      "required": false
    },
    "hoverStopPropagation": {
      "description": "Specifies whether to prevent the native node of the node from being clicked",
      "description_zh": "指定是否阻止本节点的祖先节点出现点击态",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "hoverStartTime": {
      "description": "How long after you press and hold it to appear clicked, in milliseconds",
      "description_zh": "按住后多久出现点击态，单位毫秒",
      "default": "50",
      "value": "",
      "type": "number",
      "required": false
    },
    "hoverStayTime": {
      "description": "The retention time of the click state after the finger is released, in milliseconds",
      "description_zh": "手指松开后点击态保留时间，单位毫秒",
      "default": "400",
      "value": "",
      "type": "number",
      "required": false
    },
    "disableScroll": {
      "description": "Whether or not to prevent scrolling pages within the region. Description: If the view is nested in the view, the outer view is set to disable-scroll to true when the inner scroll is disabled.",
      "description_zh": "是否阻止区域内滚动页面。说明： 如果 view 中嵌套 view，外层 view 设置 disable-scroll 为 true 时禁止内部的滚动。",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "hidden": {
      "description": "Whether it is hidden or not.",
      "description_zh": "是否隐藏。",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "animation": {
      "description": "For animation, see my.createAnimation for details. Animations generated with my.createAnimation are implemented via Transition, which only triggers onTransitionEnd, not onAnimationStart, onAnimationIteration, onAnimationEnd.",
      "description_zh": "用于动画，详见 my.createAnimation 。使用 my.createAnimation 生成的动画是通过过渡（Transition）实现的，只会触发 onTransitionEnd，不会触发 onAnimationStart, onAnimationIteration, onAnimationEnd。",
      "default": "{}",
      "value": "",
      "type": "TaroGeneral.IAnyObject",
      "required": false
    },
    "role": {
      "description": "Represents the semantic role of the component. When set to img, the screen reader will read the image when the component is focused, and when it is set to button, the screen reader will read the button when focused. For more information, see aria-component.",
      "description_zh": "表示组件的语义角色。设置为 img 时，组件聚焦后读屏软件会朗读出 图像 ；设置为 button 时，聚焦后读屏软件会朗读出 按钮 。详情请参见 aria-component。",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "ariaRole": {
      "description": "Accessibility, the role of (role) identity elements",
      "description_zh": "无障碍访问，（角色）标识元素的作用",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "ariaLabel": {
      "description": "Accessibility, additional description of (attribute) elements",
      "description_zh": "无障碍访问，（属性）元素的额外描述",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "onTap": {
      "description": "Click.",
      "description_zh": "点击。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchStart": {
      "description": "The touch action begins.",
      "description_zh": "触摸动作开始。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchMove": {
      "description": "Move after touching.",
      "description_zh": "触摸后移动。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchEnd": {
      "description": "The touch action ends.",
      "description_zh": "触摸动作结束。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchCancel": {
      "description": "The touch action is interrupted, such as a call reminder, a pop-up window.",
      "description_zh": "触摸动作被打断，如来电提醒，弹窗。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onLongTap": {
      "description": "Triggered after a 500ms long press, moving after a long press event will not trigger the scrolling of the screen.",
      "description_zh": "长按 500ms 之后触发，触发了长按事件后进行移动将不会触发屏幕的滚动。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTransitionEnd": {
      "description": "Triggered at the end of the transition.",
      "description_zh": "过渡（Transition）结束时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onAnimationIteration": {
      "description": "Triggers each time a new animation process is started. (not triggered the first time)",
      "description_zh": "每开启一次新的动画过程时触发。（第一次不触发）",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onAnimationStart": {
      "description": "Triggers at the start of the animation.",
      "description_zh": "动画开始时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onAnimationEnd": {
      "description": "Triggered at the end of the animation.",
      "description_zh": "动画结束时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onAppear": {
      "description": "Triggers when the visible area of the current element exceeds 50%.",
      "description_zh": "当前元素可见面积超过50%时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onDisappear": {
      "description": "Triggers when the invisible area of the current element exceeds 50%.",
      "description_zh": "当前元素不可见面积超过50%时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onFirstAppear": {
      "description": "Triggers when the first visible area of the current element reaches 50%.",
      "description_zh": "当前元素首次可见面积达到50%时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "catchMove": {
      "description": "是否以 catch 的形式绑定 touchmove 事件version: 3.1.0+",
      "description_zh": "是否以 catch 的形式绑定 touchmove 事件version: 3.1.0+",
      "default": "",
      "value": "",
      "type": "boolean",
      "required": false
    }
  },
  "link": "https://docs.taro.zone/docs/components/viewContainer/view",
  "link_zh": "https://docs.taro.zone/docs/components/viewContainer/view",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": []
}
